(()=>{
    //let声明的变量只在它所在的代码块有效。

    //for循环的计数器，就很合适使用let命令
    for(let i = 0; i<5; i++){
        console.log('increat i = ' + i)
    }
    // 上面代码中，计数器i只在for循环体内有效，在循环体外引用就会报错

    var a = [];
    //for (var i = 0; i < 10; i++) {
    for (var i = 0; i < 10; i++) {
    a[i] = function () {
        console.log(i);
    };
    }
    a[6](); //请说出，输出的内容是什么？

    //for循环还有一个特别之处，就是设置循环变量的那部分是一个父作用域，
    //而循环体内部是一个单独的子作用域。
    for (let i = 0; i < 3; i++) {
    let i = 'abc';
    console.log(i);
    }
    // abc
    // abc
    // abc
    // 上面代码正确运行，输出了 3 次abc。这表明函数内部的变量i与循环变量i不在
    //同一个作用域，有各自单独的作用域（同一个作用域不可使用 let 重复声明同一个变量）。
})()