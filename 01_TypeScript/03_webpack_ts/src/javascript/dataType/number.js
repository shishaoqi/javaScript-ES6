// JavaScript 内部，所有数字都是以64位浮点数形式储存，即使整数也是如此。
// 所以，1与1.0是相同的，是同一个数。
1 === 1.0 // true
// 这就是说，JavaScript 语言的底层根本没有整数，所有数字都是小数（64位浮点数）。
// 容易造成混淆的是，某些运算只有整数才能完成，此时 JavaScript 会自动把64位浮
// 点数转成32位整数，然后再进行运算，参见《运算符》一章的“位运算”部分。


// NaN是 JavaScript 的特殊值，表示“非数字”（Not a Number），主要出现在将字符串
// 解析成数字出错的场合。


// Infinity表示“无穷”，用来表示两种场景。一种是一个正的数值太大，或一个负的数值太小，
// 无法表示；另一种是非0数值除以0，得到Infinity。



// 与数值相关的全局方法
//parseInt()
//parseFloat()
//isNaN()